@model Doge.Utils.PaginatedList<DogePost>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}


<div class="container text-center pb-3">
    <div class="btn-group">
        <a class="btn btn-info" asp-route-sortOrder="byTop"
           asp-controller="Home" asp-action="Index">
            Top
        </a>
        <a class="btn btn-info" asp-route-sortOrder="byNew"
           asp-controller="Home" asp-action="Index">
            New
        </a>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        @{ 
            List<string> likeButtons = new List<string>();
            List<string> favButtons = new List<string>();
            List<int> ids = new List<int>();
        }
        <div class="row">
            @foreach (var item in Model.Posts)
        {


            string _lb = "likeButton" + item.Post.Id.ToString();
            string _fb = "favButton" + item.Post.Id.ToString();

            likeButtons.Add(_lb);
            favButtons.Add(_fb);

            ids.Add(item.Post.Id);

                <div class="col-md-6 pb-3 dogePicture">
                    <partial name="_PostPartial"
                             model="@item" />
                </div>
            }
        </div>
    </div>

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       class="btn btn-success @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       class="btn btn-success @nextDisabled">
        Next
    </a>

</div>

<script type="text/javascript">

    window.addEventListener("load", function() {
         @{           
                 //might be less than 4 posts on page, so let's create all 4 ids for buttons
                 List<string> resultFavButtons = new List<string> { "","","","" };         

                 List<string> resultLikeButtons = new List<string>{ "","","","" };                

                 List<int> resultIds = new List<int>{ 0,0,0,0 };                


                 for (int i = 0; i < Model.Posts.Count; i++)
                 {
                     resultFavButtons[i] = (favButtons[i]);
                     resultLikeButtons[i] = (likeButtons[i]);
                     resultIds[i] = (ids[i]);
                 }
             }

        //favorite buttons
        document.getElementById('@resultFavButtons[0]').
            addEventListener('click', function () { FavClick(@resultIds[0],@resultFavButtons[0]); }, false);

        document.getElementById('@resultFavButtons[1]').
            addEventListener('click', function () { FavClick(@resultIds[1],@resultFavButtons[1]); }, false);

        document.getElementById('@resultFavButtons[2]').
            addEventListener('click', function () { FavClick(@resultIds[2],@resultFavButtons[2]); }, false);

        document.getElementById('@resultFavButtons[3]').
            addEventListener('click', function () { FavClick(@resultIds[3],@resultFavButtons[3]); }, false);


        //likebuttons
        document.getElementById('@resultLikeButtons[0]').
            addEventListener('click', function () { LikeClick(@resultIds[0],@resultLikeButtons[0]); }, false);
        document.getElementById('@resultLikeButtons[1]').
            addEventListener('click', function () { LikeClick(@resultIds[1],@resultLikeButtons[1]); }, false);
        document.getElementById('@resultLikeButtons[2]').
            addEventListener('click', function () { LikeClick(@resultIds[2],@resultLikeButtons[2]); }, false);
        document.getElementById('@resultLikeButtons[3]').
            addEventListener('click', function () { LikeClick(@resultIds[3],@resultLikeButtons[3]); }, false);


        });

   

    function LikeClick(id, name) {

         var url = '@Url.Content("~/")' + "User/Home/LikePost";
        $.get(url,  { postId: id } , function (ret) {
            if (ret == "false") {                
                name.classList.remove("active");
                name.textContent = "Unlike";
            }
            if (ret == "true") {
                name.classList.add("active");
                name.textContent = "Like";
            }
        });

    }

    function FavClick(id, name) {

         var url = '@Url.Content("~/")' + "User/Home/FavoritePost";
        $.get(url,  { postId: id } , function (ret) {
            if (ret == "false") {                
                name.classList.remove("active");
                name.textContent = "UnFavorite";
            }
            if (ret == "true") {
                name.classList.add("active");
                name.textContent = "Favorite";
            }
        });

    }



</script>